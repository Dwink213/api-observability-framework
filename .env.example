# ==============================================================================
# API Observability Framework - Configuration Template
# ==============================================================================
# Copy this to .env and fill in your actual values
# Never commit .env to Git (protected by .gitignore)

# ------------------------------------------------------------------------------
# AZURE RESOURCES (from Bicep deployment)
# ------------------------------------------------------------------------------
KEY_VAULT_URL=https://your-keyvault.vault.azure.net
STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=https;AccountName=yourstorageaccount;AccountKey=...;EndpointSuffix=core.windows.net
STORAGE_TABLE_NAME=ApiData

# ------------------------------------------------------------------------------
# TARGET API CONFIGURATION
# ------------------------------------------------------------------------------
API_BASE_URL=https://api.example.com
API_AUTH_TYPE=apikey
# Options: oauth2, apikey, bearer

# API Endpoints
API_DATA_ENDPOINT=/v1/data
API_TEST_ENDPOINT=/v1/health
# For OAuth2 only:
API_TOKEN_URL=https://api.example.com/oauth/token

# API Query Configuration
API_QUERY_TYPE=rest
# Options: rest, graphql

API_SAMPLE_QUERY=?limit=5
# REST example: ?limit=5&status=active
# GraphQL example: { items(first: 5) { id name status } }

API_FULL_QUERY=?limit=100
# Production query for full data collection

API_RESPONSE_PATH=data.items
# JSON path to data array, use dot notation
# Example: data.items or items or results.data

# ------------------------------------------------------------------------------
# API FIELD MAPPING
# ------------------------------------------------------------------------------
API_ID_FIELD=id
# Unique identifier field name in API response

API_TIMESTAMP_FIELD=created_at
# Timestamp field name in API response

FIELD_MAPPING={"id":"RowKey","created_at":"EventTimestamp","status":"Status","message":"Message"}
# Maps API fields to storage columns (JSON format)

PARTITION_KEY_VALUE=api_data
# Static partition key or field name for grouping

# ------------------------------------------------------------------------------
# API PAGINATION
# ------------------------------------------------------------------------------
API_PAGINATION_ENABLED=false
# Set to true if API supports pagination

API_PAGE_SIZE=100
# Records per page for REST APIs

API_MAX_PAGES=100
# Maximum pages to fetch (prevents infinite loops)

# ------------------------------------------------------------------------------
# SECRETS (stored in Key Vault, these are the secret NAMES)
# ------------------------------------------------------------------------------
# For API Key or Bearer Token:
API_KEY_SECRET_NAME=api-key

# For OAuth2:
API_CLIENT_ID_SECRET_NAME=oauth-client-id
API_CLIENT_SECRET_SECRET_NAME=oauth-client-secret

# ------------------------------------------------------------------------------
# AI ANALYSIS CONFIGURATION (Optional)
# ------------------------------------------------------------------------------
OPENAI_ENDPOINT=https://your-openai.openai.azure.com
OPENAI_API_KEY=your-openai-key
OPENAI_DEPLOYMENT_NAME=gpt-4

ANALYSIS_LOOKBACK_DAYS=7
# How many days of data to analyze

ANALYSIS_FILTER_FIELD=Status
# Field to filter on for analysis

ANALYSIS_FILTER_VALUES=Error,Warning,Critical
# Comma-separated values to filter

AI_PROMPT_TEMPLATE=Analyze this data and identify: 1) Top issues, 2) Patterns, 3) Recommendations
# Custom AI prompt template (use {data} placeholder)

# ------------------------------------------------------------------------------
# EXAMPLE CONFIGURATIONS FOR COMMON APIs
# ------------------------------------------------------------------------------

# STRIPE PAYMENTS
# API_BASE_URL=https://api.stripe.com
# API_AUTH_TYPE=bearer
# API_KEY_SECRET_NAME=stripe-secret-key
# API_DATA_ENDPOINT=/v1/payment_intents
# API_ID_FIELD=id
# API_TIMESTAMP_FIELD=created
# FIELD_MAPPING={"id":"RowKey","created":"EventTimestamp","status":"Status","amount":"Amount","currency":"Currency"}

# GITHUB REPOSITORIES
# API_BASE_URL=https://api.github.com
# API_AUTH_TYPE=bearer
# API_KEY_SECRET_NAME=github-token
# API_DATA_ENDPOINT=/user/repos
# API_ID_FIELD=id
# API_TIMESTAMP_FIELD=created_at
# FIELD_MAPPING={"id":"RowKey","created_at":"EventTimestamp","name":"RepoName","language":"Language","stargazers_count":"Stars"}

# DATADOG METRICS
# API_BASE_URL=https://api.datadoghq.com
# API_AUTH_TYPE=apikey
# API_KEY_SECRET_NAME=datadog-api-key
# API_DATA_ENDPOINT=/api/v1/metrics
# API_ID_FIELD=metric
# API_TIMESTAMP_FIELD=timestamp